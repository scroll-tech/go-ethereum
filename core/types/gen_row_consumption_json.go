// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package types

import (
	"encoding/json"
	"errors"

	"github.com/scroll-tech/go-ethereum/common/hexutil"
)

var _ = (*subCircuitRowUsageMarshaling)(nil)

// MarshalJSON marshals as JSON.
func (s SubCircuitRowUsage) MarshalJSON() ([]byte, error) {
	type SubCircuitRowUsage struct {
		Name      string         `json:"name" gencodec:"required"`
		RowNumber hexutil.Uint64 `json:"row_number" gencodec:"required"`
	}
	var enc SubCircuitRowUsage
	enc.Name = s.Name
	enc.RowNumber = hexutil.Uint64(s.RowNumber)
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (s *SubCircuitRowUsage) UnmarshalJSON(input []byte) error {
	type SubCircuitRowUsage struct {
		Name      *string         `json:"name" gencodec:"required"`
		RowNumber *hexutil.Uint64 `json:"row_number" gencodec:"required"`
	}
	var dec SubCircuitRowUsage
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Name == nil {
		return errors.New("missing required field 'name' for SubCircuitRowUsage")
	}
	s.Name = *dec.Name
	if dec.RowNumber == nil {
		return errors.New("missing required field 'row_number' for SubCircuitRowUsage")
	}
	s.RowNumber = uint64(*dec.RowNumber)
	return nil
}
