// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package types

import (
	"encoding/json"
	"errors"

	"github.com/scroll-tech/go-ethereum/common/hexutil"
)

var _ = (*subCircuitRowConsumptionMarshaling)(nil)

// MarshalJSON marshals as JSON.
func (s SubCircuitRowConsumption) MarshalJSON() ([]byte, error) {
	type SubCircuitRowConsumption struct {
		CircuitName string         `json:"circuitName" gencodec:"required"`
		Rows        hexutil.Uint64 `json:"rows" gencodec:"required"`
	}
	var enc SubCircuitRowConsumption
	enc.CircuitName = s.CircuitName
	enc.Rows = hexutil.Uint64(s.Rows)
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (s *SubCircuitRowConsumption) UnmarshalJSON(input []byte) error {
	type SubCircuitRowConsumption struct {
		CircuitName *string         `json:"circuitName" gencodec:"required"`
		Rows        *hexutil.Uint64 `json:"rows" gencodec:"required"`
	}
	var dec SubCircuitRowConsumption
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.CircuitName == nil {
		return errors.New("missing required field 'circuitName' for SubCircuitRowConsumption")
	}
	s.CircuitName = *dec.CircuitName
	if dec.Rows == nil {
		return errors.New("missing required field 'rows' for SubCircuitRowConsumption")
	}
	s.Rows = uint64(*dec.Rows)
	return nil
}
